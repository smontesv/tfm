/* 0.- Borra la tablas en el caso que existan */
DROP TABLE IF EXISTS `tfm_smv`.`HIST_A_B`;
DROP TABLE IF EXISTS `tfm_smv`.`HIST_A2`;
DROP TABLE IF EXISTS `tfm_smv`.`HIST_A1`;
DROP TABLE IF EXISTS `tfm_smv`.`HIST_PRINCIPAL_B`;
DROP TABLE IF EXISTS `tfm_smv`.`HIST_PRINCIPAL_A`;
DROP TABLE IF EXISTS `tfm_smv`.`TB_PRINCIPAL`;
DROP TABLE IF EXISTS `tfm_smv`.`CAT_A1`;
DROP TABLE IF EXISTS `tfm_smv`.`CAT_A2`;
DROP TABLE IF EXISTS `tfm_smv`.`LOG_HIST`;


/* 1.- Crea las tablas principal y los catálogos que no dependen de ninguna tabla */
CREATE TABLE IF NOT EXISTS `tfm_smv`.`TB_PRINCIPAL` (
  `ID_PRINCIPAL` INT NOT NULL,
  `DES_PRINCIPAL` VARCHAR(45) NOT NULL,
  `COMENTARIO` VARCHAR(1000) NULL,
  PRIMARY KEY (`ID_PRINCIPAL`))
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `tfm_smv`.`CAT_A1` (
  `ID_A1` INT NOT NULL,
  `DES_A1` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID_A1`))
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `tfm_smv`.`CAT_A2` (
  `ID_A2` INT NOT NULL,
  `DES_A2` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID_A2`))
ENGINE = InnoDB;

/* 2.- Creación de las dos Históricos Principales */
CREATE TABLE IF NOT EXISTS `tfm_smv`.`HIST_PRINCIPAL_A` (
  `ID_PRINCIPAL` INT NOT NULL,
  `ORD_PRINCIPAL` INT NOT NULL,
  `FECHA_INICIO` DATE NOT NULL,
  `FECHA_FIN` DATE NULL,
  `COMENTARIO` VARCHAR(1000) NULL,
  PRIMARY KEY (`ID_PRINCIPAL`, `ORD_PRINCIPAL`),
  CONSTRAINT `fk_HIST_PRINCIPAL_TB_PRINCIPAL`
    FOREIGN KEY (`ID_PRINCIPAL`)
    REFERENCES `tfm_smv`.`TB_PRINCIPAL` (`ID_PRINCIPAL`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `tfm_smv`.`HIST_PRINCIPAL_B` (
  `ID_PRINCIPAL_B` INT NOT NULL,
  `DES_PRINCIPAL_B` VARCHAR(45) NOT NULL,
  `FECHA_INICIO` DATE NOT NULL,
  `FECHA_FIN` DATE NULL,
  `COMENTARIO` VARCHAR(1000) NULL,
  PRIMARY KEY (`ID_PRINCIPAL_B`))
ENGINE = InnoDB;

/* 3.- Creación de tablas Históricas dependientes del Histórico Principal A */

CREATE TABLE IF NOT EXISTS `tfm_smv`.`HIST_A1` (
  `ID_PRINCIPAL` INT NOT NULL,
  `ORD_PRINCIPAL` INT NOT NULL,
  `ID_A1` INT NOT NULL,
  `FECHA_INICIO` DATE NOT NULL,
  `FECHA_FIN` DATE NULL,
  `COMENTARIO` VARCHAR(1000) NULL,
  PRIMARY KEY (`ID_PRINCIPAL`, `ORD_PRINCIPAL`, `ID_A1`, `FECHA_INICIO`),
  INDEX `fk_HIST_A1_CAT_A11_idx` (`ID_A1` ASC) VISIBLE,
  CONSTRAINT `fk_HIST_A1_HIST_PRINCIPAL_A1`
    FOREIGN KEY (`ID_PRINCIPAL` , `ORD_PRINCIPAL`)
    REFERENCES `tfm_smv`.`HIST_PRINCIPAL_A` (`ID_PRINCIPAL` , `ORD_PRINCIPAL`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_HIST_A1_CAT_A11`
    FOREIGN KEY (`ID_A1`)
    REFERENCES `tfm_smv`.`CAT_A1` (`ID_A1`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `tfm_smv`.`HIST_A2` (
  `ID_PRINCIPAL` INT NOT NULL,
  `ORD_PRINCIPAL` INT NOT NULL,
  `ID_A2` INT NOT NULL,
  `FECHA_INICIO` DATE NOT NULL,
  `FECHA_FIN` DATE NULL,
  `COMENTARIO` VARCHAR(1000) NULL,
  PRIMARY KEY (`ID_PRINCIPAL`, `ORD_PRINCIPAL`, `ID_A2`, `FECHA_INICIO`),
  INDEX `fk_HIST_A2_CAT_A21_idx` (`ID_A2` ASC) VISIBLE,
  CONSTRAINT `fk_HIST_A2_HIST_PRINCIPAL_A1`
    FOREIGN KEY (`ID_PRINCIPAL` , `ORD_PRINCIPAL`)
    REFERENCES `tfm_smv`.`HIST_PRINCIPAL_A` (`ID_PRINCIPAL` , `ORD_PRINCIPAL`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_HIST_A2_CAT_A21`
    FOREIGN KEY (`ID_A2`)
    REFERENCES `tfm_smv`.`CAT_A2` (`ID_A2`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

/* 4.- Creación de tabla Histórica dependientes del Históricos Principal A y B */

CREATE TABLE IF NOT EXISTS `tfm_smv`.`HIST_A_B` (
  `ID_PRINCIPAL` INT NOT NULL,
  `ORD_PRINCIPAL` INT NOT NULL,
  `ID_PRINCIPAL_B` INT NOT NULL,
  `FECHA_INICIO` DATE NOT NULL,
  `FECHA_FIN` DATE NULL,
  `COMENTARIO` VARCHAR(1000) NULL,
  PRIMARY KEY (`ID_PRINCIPAL`, `ORD_PRINCIPAL`, `ID_PRINCIPAL_B`,`FECHA_INICIO`),
  INDEX `fk_HIST_A_B_HIST_PRINCIPAL_B1_idx` (`ID_PRINCIPAL_B` ASC) VISIBLE,
  CONSTRAINT `fk_HIST_A_B_HIST_PRINCIPAL_A1`
    FOREIGN KEY (`ID_PRINCIPAL` , `ORD_PRINCIPAL`)
    REFERENCES `tfm_smv`.`HIST_PRINCIPAL_A` (`ID_PRINCIPAL` , `ORD_PRINCIPAL`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_HIST_A_B_HIST_PRINCIPAL_B1`
    FOREIGN KEY (`ID_PRINCIPAL_B`)
    REFERENCES `tfm_smv`.`HIST_PRINCIPAL_B` (`ID_PRINCIPAL_B`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

/* 5.- Creación de tabla para guardar los referencias de fechas antes de cmbio */
CREATE TABLE IF NOT EXISTS `tfm_smv`.`LOG_HIST` (
	`ID_ERROR` INT,
    `TABLA` VARCHAR(100),
    `REFERENCIA` VARCHAR(1000),
    `FECHA_INICIO_OLD` DATE,
	`FECHA_FIN_OLD` DATE,
    `FECHA_INICIO_NEW` DATE,
	`FECHA_FIN_NEW` DATE
)
ENGINE = InnoDB;